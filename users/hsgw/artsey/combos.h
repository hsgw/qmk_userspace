// generated by generate_combo.py

#pragma once

#include QMK_KEYBOARD_H
#include "combo_util.h"

// layers
enum layers {
  AR_BAS,
  AR_NUM,
  AR_SY1,
  AR_CUS,
  AR_SY2,
  AR_MOU,
  AR_NAV,
};

// define base keys
#define BAS_1_1 LT(AR_NUM,KC_S)
#define BAS_1_2 KC_T
#define BAS_1_3 KC_R
#define BAS_1_4 LT(AR_SY2,KC_A)
#define BAS_2_1 LT(AR_CUS,KC_O)
#define BAS_2_2 KC_I
#define BAS_2_3 KC_Y
#define BAS_2_4 LT(AR_SY1,KC_E)
#define NUM_1_1 KC_TRNS
#define NUM_1_2 KC_3
#define NUM_1_3 KC_2
#define NUM_1_4 KC_1
#define NUM_2_1 KC_TRNS
#define NUM_2_2 KC_6
#define NUM_2_3 KC_5
#define NUM_2_4 KC_4
#define SY1_1_1 KC_BSLS
#define SY1_1_2 KC_SCLN
#define SY1_1_3 KC_GRV
#define SY1_1_4 KC_HASH
#define SY1_2_1 KC_EQL
#define SY1_2_2 KC_MINS
#define SY1_2_3 KC_AT
#define SY1_2_4 KC_TRNS
#define CUS_1_1 KC_TRNS
#define CUS_1_2 KC_VOLU
#define CUS_1_3 KC_MUTE
#define CUS_1_4 KC_MPLY
#define CUS_2_1 KC_TRNS
#define CUS_2_2 KC_VOLD
#define CUS_2_3 KC_MPRV
#define CUS_2_4 KC_MNXT
#define SY2_1_1 KC_LCBR
#define SY2_1_2 KC_LBRC
#define SY2_1_3 KC_LPRN
#define SY2_1_4 KC_TRNS
#define SY2_2_1 KC_RCBR
#define SY2_2_2 KC_RBRC
#define SY2_2_3 KC_RPRN
#define SY2_2_4 KC_TRNS
#define MOU_1_1 KC_WH_U
#define MOU_1_2 KC_BTN2
#define MOU_1_3 KC_MS_U
#define MOU_1_4 KC_BTN1
#define MOU_2_1 KC_WH_D
#define MOU_2_2 KC_MS_L
#define MOU_2_3 KC_MS_D
#define MOU_2_4 KC_MS_R
#define NAV_1_1 KC_PGUP
#define NAV_1_2 KC_HOME
#define NAV_1_3 KC_UP
#define NAV_1_4 KC_END
#define NAV_2_1 KC_PGDN
#define NAV_2_2 KC_LEFT
#define NAV_2_3 KC_DOWN
#define NAV_2_4 KC_RIGHT

// define combos
enum combo_events {
  AR_BAS_KC_H,
  AR_BAS_KC_Q,
  AR_BAS_KC_U,
  AR_BAS_KC_C,
  AR_BAS_KC_K,
  AR_BAS_KC_B,
  AR_BAS_KC_W,
  AR_BAS_KC_N,
  AR_BAS_KC_F,
  AR_BAS_KC_X,
  AR_BAS_KC_J,
  AR_BAS_KC_M,
  AR_BAS_KC_P,
  AR_BAS_KC_V,
  AR_BAS_KC_L,
  AR_BAS_KC_Z,
  AR_BAS_KC_D,
  AR_BAS_KC_G,
  AR_BAS_KC_QUOT,
  AR_BAS_KC_EXLM,
  AR_BAS_KC_QUES,
  AR_BAS_KC_DOT,
  AR_BAS_KC_COMM,
  AR_BAS_KC_SLSH,
  AR_BAS_KC_TAB,
  AR_BAS_KC_SPC,
  AR_NAV_KC_SPC,
  AR_BAS_KC_BSPC,
  AR_NAV_KC_BSPC,
  AR_BAS_KC_DEL,
  AR_NAV_KC_DEL,
  AR_BAS_KC_ENT,
  AR_NAV_KC_ENT,
  AR_BAS_KC_ESC,
  AR_NAV_KC_ESC,
  AR_BAS_AR_TG_CTL,
  AR_NAV_AR_TG_CTL,
  AR_MOU_AR_TG_CTL,
  AR_BAS_AR_TG_SFT,
  AR_NAV_AR_TG_SFT,
  AR_BAS_AR_TG_GUI,
  AR_NAV_AR_TG_GUI,
  AR_MOU_AR_TG_GUI,
  AR_BAS_AR_TG_ALT,
  AR_NAV_AR_TG_ALT,
  AR_MOU_AR_TG_ALT,
  AR_BAS_OSM_MOD_RSFT,
  AR_NAV_OSM_MOD_RSFT,
  AR_BAS_AR_PANIC,
  AR_NAV_AR_PANIC,
  AR_MOU_AR_PANIC,
  AR_BAS_TG_AR_NAV,
  AR_NAV_TG_AR_NAV,
  AR_BAS_TG_AR_MOU,
  AR_MOU_TG_AR_MOU,
  AR_NUM_KC_7,
  AR_NUM_KC_8,
  AR_NUM_KC_9,
  AR_NUM_KC_0,
};

const uint16_t PROGMEM ar_bas_kc_h[] = {BAS_2_4,BAS_2_2,COMBO_END};
const uint16_t PROGMEM ar_bas_kc_q[] = {BAS_1_4,BAS_1_2,BAS_1_1,COMBO_END};
const uint16_t PROGMEM ar_bas_kc_u[] = {BAS_2_3,BAS_2_2,COMBO_END};
const uint16_t PROGMEM ar_bas_kc_c[] = {BAS_2_4,BAS_2_3,COMBO_END};
const uint16_t PROGMEM ar_bas_kc_k[] = {BAS_2_3,BAS_2_1,COMBO_END};
const uint16_t PROGMEM ar_bas_kc_b[] = {BAS_2_4,BAS_2_1,COMBO_END};
const uint16_t PROGMEM ar_bas_kc_w[] = {BAS_1_4,BAS_1_1,COMBO_END};
const uint16_t PROGMEM ar_bas_kc_n[] = {BAS_2_2,BAS_2_1,COMBO_END};
const uint16_t PROGMEM ar_bas_kc_f[] = {BAS_1_4,BAS_1_3,COMBO_END};
const uint16_t PROGMEM ar_bas_kc_x[] = {BAS_1_3,BAS_1_2,BAS_1_1,COMBO_END};
const uint16_t PROGMEM ar_bas_kc_j[] = {BAS_1_2,BAS_1_1,COMBO_END};
const uint16_t PROGMEM ar_bas_kc_m[] = {BAS_2_3,BAS_2_2,BAS_2_1,COMBO_END};
const uint16_t PROGMEM ar_bas_kc_p[] = {BAS_2_4,BAS_2_2,BAS_2_1,COMBO_END};
const uint16_t PROGMEM ar_bas_kc_v[] = {BAS_1_3,BAS_1_1,COMBO_END};
const uint16_t PROGMEM ar_bas_kc_l[] = {BAS_2_4,BAS_2_3,BAS_2_2,COMBO_END};
const uint16_t PROGMEM ar_bas_kc_z[] = {BAS_1_4,BAS_1_3,BAS_1_2,BAS_1_1,COMBO_END};
const uint16_t PROGMEM ar_bas_kc_d[] = {BAS_1_4,BAS_1_3,BAS_1_2,COMBO_END};
const uint16_t PROGMEM ar_bas_kc_g[] = {BAS_1_3,BAS_1_2,COMBO_END};
const uint16_t PROGMEM ar_bas_kc_quot[] = {BAS_1_3,BAS_2_3,COMBO_END};
const uint16_t PROGMEM ar_bas_kc_exlm[] = {BAS_1_2,BAS_2_2,COMBO_END};
const uint16_t PROGMEM ar_bas_kc_ques[] = {BAS_1_1,BAS_2_1,COMBO_END};
const uint16_t PROGMEM ar_bas_kc_dot[] = {BAS_1_4,BAS_2_2,COMBO_END};
const uint16_t PROGMEM ar_bas_kc_comm[] = {BAS_1_4,BAS_2_3,COMBO_END};
const uint16_t PROGMEM ar_bas_kc_slsh[] = {BAS_1_4,BAS_2_1,COMBO_END};
const uint16_t PROGMEM ar_bas_kc_tab[] = {BAS_1_4,BAS_1_3,BAS_1_2,BAS_2_1,COMBO_END};
const uint16_t PROGMEM ar_bas_kc_spc[] = {BAS_2_4,BAS_2_3,BAS_2_2,BAS_2_1,COMBO_END};
const uint16_t PROGMEM ar_nav_kc_spc[] = {NAV_2_4,NAV_2_3,NAV_2_2,NAV_2_1,COMBO_END};
const uint16_t PROGMEM ar_bas_kc_bspc[] = {BAS_2_2,BAS_1_3,COMBO_END};
const uint16_t PROGMEM ar_nav_kc_bspc[] = {NAV_2_2,NAV_1_3,COMBO_END};
const uint16_t PROGMEM ar_bas_kc_del[] = {BAS_1_3,BAS_2_4,COMBO_END};
const uint16_t PROGMEM ar_nav_kc_del[] = {NAV_1_3,NAV_2_4,COMBO_END};
const uint16_t PROGMEM ar_bas_kc_ent[] = {BAS_1_4,BAS_2_4,COMBO_END};
const uint16_t PROGMEM ar_nav_kc_ent[] = {NAV_1_4,NAV_2_4,COMBO_END};
const uint16_t PROGMEM ar_bas_kc_esc[] = {BAS_1_4,BAS_1_3,BAS_2_1,COMBO_END};
const uint16_t PROGMEM ar_nav_kc_esc[] = {NAV_1_4,NAV_1_3,NAV_2_1,COMBO_END};
const uint16_t PROGMEM ar_bas_ar_tg_ctl[] = {BAS_1_1,BAS_2_4,COMBO_END};
const uint16_t PROGMEM ar_nav_ar_tg_ctl[] = {NAV_1_1,NAV_2_4,COMBO_END};
const uint16_t PROGMEM ar_mou_ar_tg_ctl[] = {MOU_1_1,MOU_2_4,COMBO_END};
const uint16_t PROGMEM ar_bas_ar_tg_sft[] = {BAS_1_4,BAS_2_3,BAS_2_2,BAS_2_1,COMBO_END};
const uint16_t PROGMEM ar_nav_ar_tg_sft[] = {NAV_1_4,NAV_2_3,NAV_2_2,NAV_2_1,COMBO_END};
const uint16_t PROGMEM ar_bas_ar_tg_gui[] = {BAS_1_1,BAS_2_3,COMBO_END};
const uint16_t PROGMEM ar_nav_ar_tg_gui[] = {NAV_1_1,NAV_2_3,COMBO_END};
const uint16_t PROGMEM ar_mou_ar_tg_gui[] = {MOU_1_1,MOU_2_3,COMBO_END};
const uint16_t PROGMEM ar_bas_ar_tg_alt[] = {BAS_1_1,BAS_2_2,COMBO_END};
const uint16_t PROGMEM ar_nav_ar_tg_alt[] = {NAV_1_1,NAV_2_2,COMBO_END};
const uint16_t PROGMEM ar_mou_ar_tg_alt[] = {MOU_1_1,MOU_2_2,COMBO_END};
const uint16_t PROGMEM ar_bas_osm_mod_rsft[] = {BAS_1_1,BAS_1_2,BAS_1_3,BAS_2_4,COMBO_END};
const uint16_t PROGMEM ar_nav_osm_mod_rsft[] = {NAV_1_1,NAV_1_2,NAV_1_3,NAV_2_4,COMBO_END};
const uint16_t PROGMEM ar_bas_ar_panic[] = {BAS_1_4,BAS_1_3,BAS_1_2,BAS_1_1,BAS_2_4,BAS_2_3,BAS_2_2,BAS_2_1,COMBO_END};
const uint16_t PROGMEM ar_nav_ar_panic[] = {NAV_1_4,NAV_1_3,NAV_1_2,NAV_1_1,NAV_2_4,NAV_2_3,NAV_2_2,NAV_2_1,COMBO_END};
const uint16_t PROGMEM ar_mou_ar_panic[] = {MOU_1_4,MOU_1_3,MOU_1_2,MOU_1_1,MOU_2_4,MOU_2_3,MOU_2_2,MOU_2_1,COMBO_END};
const uint16_t PROGMEM ar_bas_tg_ar_nav[] = {BAS_1_3,BAS_2_4,BAS_2_2,COMBO_END};
const uint16_t PROGMEM ar_nav_tg_ar_nav[] = {NAV_1_3,NAV_2_4,NAV_2_2,COMBO_END};
const uint16_t PROGMEM ar_bas_tg_ar_mou[] = {BAS_1_4,BAS_1_2,BAS_2_3,COMBO_END};
const uint16_t PROGMEM ar_mou_tg_ar_mou[] = {MOU_1_4,MOU_1_2,MOU_2_3,COMBO_END};
const uint16_t PROGMEM ar_num_kc_7[] = {NUM_1_3,NUM_1_4,COMBO_END};
const uint16_t PROGMEM ar_num_kc_8[] = {NUM_1_2,NUM_1_3,COMBO_END};
const uint16_t PROGMEM ar_num_kc_9[] = {NUM_2_3,NUM_2_4,COMBO_END};
const uint16_t PROGMEM ar_num_kc_0[] = {NUM_2_2,NUM_2_3,COMBO_END};

combo_t key_combos[] = {
  [AR_BAS_KC_H] = COMBO(ar_bas_kc_h, KC_H),
  [AR_BAS_KC_Q] = COMBO(ar_bas_kc_q, KC_Q),
  [AR_BAS_KC_U] = COMBO(ar_bas_kc_u, KC_U),
  [AR_BAS_KC_C] = COMBO(ar_bas_kc_c, KC_C),
  [AR_BAS_KC_K] = COMBO(ar_bas_kc_k, KC_K),
  [AR_BAS_KC_B] = COMBO(ar_bas_kc_b, KC_B),
  [AR_BAS_KC_W] = COMBO(ar_bas_kc_w, KC_W),
  [AR_BAS_KC_N] = COMBO(ar_bas_kc_n, KC_N),
  [AR_BAS_KC_F] = COMBO(ar_bas_kc_f, KC_F),
  [AR_BAS_KC_X] = COMBO(ar_bas_kc_x, KC_X),
  [AR_BAS_KC_J] = COMBO(ar_bas_kc_j, KC_J),
  [AR_BAS_KC_M] = COMBO(ar_bas_kc_m, KC_M),
  [AR_BAS_KC_P] = COMBO(ar_bas_kc_p, KC_P),
  [AR_BAS_KC_V] = COMBO(ar_bas_kc_v, KC_V),
  [AR_BAS_KC_L] = COMBO(ar_bas_kc_l, KC_L),
  [AR_BAS_KC_Z] = COMBO(ar_bas_kc_z, KC_Z),
  [AR_BAS_KC_D] = COMBO(ar_bas_kc_d, KC_D),
  [AR_BAS_KC_G] = COMBO(ar_bas_kc_g, KC_G),
  [AR_BAS_KC_QUOT] = COMBO(ar_bas_kc_quot, KC_QUOT),
  [AR_BAS_KC_EXLM] = COMBO(ar_bas_kc_exlm, KC_EXLM),
  [AR_BAS_KC_QUES] = COMBO(ar_bas_kc_ques, KC_QUES),
  [AR_BAS_KC_DOT] = COMBO(ar_bas_kc_dot, KC_DOT),
  [AR_BAS_KC_COMM] = COMBO(ar_bas_kc_comm, KC_COMM),
  [AR_BAS_KC_SLSH] = COMBO(ar_bas_kc_slsh, KC_SLSH),
  [AR_BAS_KC_TAB] = COMBO(ar_bas_kc_tab, KC_TAB),
  [AR_BAS_KC_SPC] = COMBO(ar_bas_kc_spc, KC_SPC),
  [AR_NAV_KC_SPC] = COMBO(ar_nav_kc_spc, KC_SPC),
  [AR_BAS_KC_BSPC] = COMBO(ar_bas_kc_bspc, KC_BSPC),
  [AR_NAV_KC_BSPC] = COMBO(ar_nav_kc_bspc, KC_BSPC),
  [AR_BAS_KC_DEL] = COMBO(ar_bas_kc_del, KC_DEL),
  [AR_NAV_KC_DEL] = COMBO(ar_nav_kc_del, KC_DEL),
  [AR_BAS_KC_ENT] = COMBO(ar_bas_kc_ent, KC_ENT),
  [AR_NAV_KC_ENT] = COMBO(ar_nav_kc_ent, KC_ENT),
  [AR_BAS_KC_ESC] = COMBO(ar_bas_kc_esc, KC_ESC),
  [AR_NAV_KC_ESC] = COMBO(ar_nav_kc_esc, KC_ESC),
  [AR_BAS_AR_TG_CTL] = COMBO(ar_bas_ar_tg_ctl, AR_TG_CTL),
  [AR_NAV_AR_TG_CTL] = COMBO(ar_nav_ar_tg_ctl, AR_TG_CTL),
  [AR_MOU_AR_TG_CTL] = COMBO(ar_mou_ar_tg_ctl, AR_TG_CTL),
  [AR_BAS_AR_TG_SFT] = COMBO(ar_bas_ar_tg_sft, AR_TG_SFT),
  [AR_NAV_AR_TG_SFT] = COMBO(ar_nav_ar_tg_sft, AR_TG_SFT),
  [AR_BAS_AR_TG_GUI] = COMBO(ar_bas_ar_tg_gui, AR_TG_GUI),
  [AR_NAV_AR_TG_GUI] = COMBO(ar_nav_ar_tg_gui, AR_TG_GUI),
  [AR_MOU_AR_TG_GUI] = COMBO(ar_mou_ar_tg_gui, AR_TG_GUI),
  [AR_BAS_AR_TG_ALT] = COMBO(ar_bas_ar_tg_alt, AR_TG_ALT),
  [AR_NAV_AR_TG_ALT] = COMBO(ar_nav_ar_tg_alt, AR_TG_ALT),
  [AR_MOU_AR_TG_ALT] = COMBO(ar_mou_ar_tg_alt, AR_TG_ALT),
  [AR_BAS_OSM_MOD_RSFT] = COMBO(ar_bas_osm_mod_rsft, OSM(MOD_RSFT)),
  [AR_NAV_OSM_MOD_RSFT] = COMBO(ar_nav_osm_mod_rsft, OSM(MOD_RSFT)),
  [AR_BAS_AR_PANIC] = COMBO(ar_bas_ar_panic, AR_PANIC),
  [AR_NAV_AR_PANIC] = COMBO(ar_nav_ar_panic, AR_PANIC),
  [AR_MOU_AR_PANIC] = COMBO(ar_mou_ar_panic, AR_PANIC),
  [AR_BAS_TG_AR_NAV] = COMBO(ar_bas_tg_ar_nav, TG(AR_NAV)),
  [AR_NAV_TG_AR_NAV] = COMBO(ar_nav_tg_ar_nav, TG(AR_NAV)),
  [AR_BAS_TG_AR_MOU] = COMBO(ar_bas_tg_ar_mou, TG(AR_MOU)),
  [AR_MOU_TG_AR_MOU] = COMBO(ar_mou_tg_ar_mou, TG(AR_MOU)),
  [AR_NUM_KC_7] = COMBO(ar_num_kc_7, KC_7),
  [AR_NUM_KC_8] = COMBO(ar_num_kc_8, KC_8),
  [AR_NUM_KC_9] = COMBO(ar_num_kc_9, KC_9),
  [AR_NUM_KC_0] = COMBO(ar_num_kc_0, KC_0),
};

