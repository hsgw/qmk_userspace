// generated by generate_combo.py

#pragma once

#include "combo_util.h"

#ifndef COMBO_LAYER_START
#define COMBO_LAYER_START 0
#endif

// layers
enum combo_layers {
  CMB_BAS = COMBO_LAYER_START,
  CMB_NUM,
  CMB_SY1,
  CMB_CUS,
  CMB_SY2,
  CMB_MOU,
  CMB_NAV,
};

// define base keys
#define BAS_1_1 LT(CMB_NUM,KC_S)
#define BAS_1_2 KC_T
#define BAS_1_3 KC_R
#define BAS_1_4 LT(CMB_SY2,KC_A)
#define BAS_2_1 LT(CMB_CUS,KC_O)
#define BAS_2_2 KC_I
#define BAS_2_3 KC_Y
#define BAS_2_4 LT(CMB_SY1,KC_E)
#define NUM_1_1 KC_TRNS
#define NUM_1_2 KC_3
#define NUM_1_3 KC_2
#define NUM_1_4 KC_1
#define NUM_2_1 KC_TRNS
#define NUM_2_2 KC_6
#define NUM_2_3 KC_5
#define NUM_2_4 KC_4
#define SY1_1_1 KC_BSLS
#define SY1_1_2 KC_SCLN
#define SY1_1_3 KC_GRV
#define SY1_1_4 KC_HASH
#define SY1_2_1 KC_EQL
#define SY1_2_2 KC_MINS
#define SY1_2_3 KC_AT
#define SY1_2_4 KC_TRNS
#define CUS_1_1 KC_TRNS
#define CUS_1_2 KC_VOLU
#define CUS_1_3 KC_MUTE
#define CUS_1_4 KC_MPLY
#define CUS_2_1 KC_TRNS
#define CUS_2_2 KC_VOLD
#define CUS_2_3 KC_MPRV
#define CUS_2_4 KC_MNXT
#define SY2_1_1 KC_LCBR
#define SY2_1_2 KC_LBRC
#define SY2_1_3 KC_LPRN
#define SY2_1_4 KC_TRNS
#define SY2_2_1 KC_RCBR
#define SY2_2_2 KC_RBRC
#define SY2_2_3 KC_RPRN
#define SY2_2_4 KC_TRNS
#define MOU_1_1 KC_WH_U
#define MOU_1_2 KC_BTN2
#define MOU_1_3 KC_MS_U
#define MOU_1_4 KC_BTN1
#define MOU_2_1 KC_WH_D
#define MOU_2_2 KC_MS_L
#define MOU_2_3 KC_MS_D
#define MOU_2_4 KC_MS_R
#define NAV_1_1 KC_PGUP
#define NAV_1_2 KC_HOME
#define NAV_1_3 KC_UP
#define NAV_1_4 KC_END
#define NAV_2_1 KC_PGDN
#define NAV_2_2 KC_LEFT
#define NAV_2_3 KC_DOWN
#define NAV_2_4 KC_RIGHT

// define combos
enum combo_events {
  CMB_BAS_KC_H,
  CMB_BAS_KC_Q,
  CMB_BAS_KC_U,
  CMB_BAS_KC_C,
  CMB_BAS_KC_K,
  CMB_BAS_KC_B,
  CMB_BAS_KC_W,
  CMB_BAS_KC_N,
  CMB_BAS_KC_F,
  CMB_BAS_KC_X,
  CMB_BAS_KC_J,
  CMB_BAS_KC_M,
  CMB_BAS_KC_P,
  CMB_BAS_KC_V,
  CMB_BAS_KC_L,
  CMB_BAS_KC_Z,
  CMB_BAS_KC_D,
  CMB_BAS_KC_G,
  CMB_BAS_KC_QUOT,
  CMB_BAS_KC_EXLM,
  CMB_BAS_KC_QUES,
  CMB_BAS_KC_DOT,
  CMB_BAS_KC_COMM,
  CMB_BAS_KC_SLSH,
  CMB_BAS_KC_TAB,
  CMB_BAS_KC_SPC,
  CMB_NAV_KC_SPC,
  CMB_BAS_KC_BSPC,
  CMB_NAV_KC_BSPC,
  CMB_BAS_KC_DEL,
  CMB_NAV_KC_DEL,
  CMB_BAS_KC_ENT,
  CMB_NAV_KC_ENT,
  CMB_BAS_KC_ESC,
  CMB_NAV_KC_ESC,
  CMB_BAS_CMB_TG_CTL,
  CMB_NAV_CMB_TG_CTL,
  CMB_MOU_CMB_TG_CTL,
  CMB_BAS_CMB_TG_SFT,
  CMB_NAV_CMB_TG_SFT,
  CMB_BAS_CMB_TG_GUI,
  CMB_NAV_CMB_TG_GUI,
  CMB_MOU_CMB_TG_GUI,
  CMB_BAS_CMB_TG_ALT,
  CMB_NAV_CMB_TG_ALT,
  CMB_MOU_CMB_TG_ALT,
  CMB_BAS_OSM_MOD_RSFT,
  CMB_NAV_OSM_MOD_RSFT,
  CMB_BAS_CMB_PANIC,
  CMB_NAV_CMB_PANIC,
  CMB_MOU_CMB_PANIC,
  CMB_BAS_TG_CMB_NAV,
  CMB_NAV_TG_CMB_NAV,
  CMB_BAS_TG_CMB_MOU,
  CMB_MOU_TG_CMB_MOU,
  CMB_NUM_KC_7,
  CMB_NUM_KC_8,
  CMB_NUM_KC_9,
  CMB_NUM_KC_0,
};

const uint16_t PROGMEM cmb_bas_kc_h[] = {BAS_2_4,BAS_2_2,COMBO_END};
const uint16_t PROGMEM cmb_bas_kc_q[] = {BAS_1_4,BAS_1_2,BAS_1_1,COMBO_END};
const uint16_t PROGMEM cmb_bas_kc_u[] = {BAS_2_3,BAS_2_2,COMBO_END};
const uint16_t PROGMEM cmb_bas_kc_c[] = {BAS_2_4,BAS_2_3,COMBO_END};
const uint16_t PROGMEM cmb_bas_kc_k[] = {BAS_2_3,BAS_2_1,COMBO_END};
const uint16_t PROGMEM cmb_bas_kc_b[] = {BAS_2_4,BAS_2_1,COMBO_END};
const uint16_t PROGMEM cmb_bas_kc_w[] = {BAS_1_4,BAS_1_1,COMBO_END};
const uint16_t PROGMEM cmb_bas_kc_n[] = {BAS_2_2,BAS_2_1,COMBO_END};
const uint16_t PROGMEM cmb_bas_kc_f[] = {BAS_1_4,BAS_1_3,COMBO_END};
const uint16_t PROGMEM cmb_bas_kc_x[] = {BAS_1_3,BAS_1_2,BAS_1_1,COMBO_END};
const uint16_t PROGMEM cmb_bas_kc_j[] = {BAS_1_2,BAS_1_1,COMBO_END};
const uint16_t PROGMEM cmb_bas_kc_m[] = {BAS_2_3,BAS_2_2,BAS_2_1,COMBO_END};
const uint16_t PROGMEM cmb_bas_kc_p[] = {BAS_2_4,BAS_2_2,BAS_2_1,COMBO_END};
const uint16_t PROGMEM cmb_bas_kc_v[] = {BAS_1_3,BAS_1_1,COMBO_END};
const uint16_t PROGMEM cmb_bas_kc_l[] = {BAS_2_4,BAS_2_3,BAS_2_2,COMBO_END};
const uint16_t PROGMEM cmb_bas_kc_z[] = {BAS_1_4,BAS_1_3,BAS_1_2,BAS_1_1,COMBO_END};
const uint16_t PROGMEM cmb_bas_kc_d[] = {BAS_1_4,BAS_1_3,BAS_1_2,COMBO_END};
const uint16_t PROGMEM cmb_bas_kc_g[] = {BAS_1_3,BAS_1_2,COMBO_END};
const uint16_t PROGMEM cmb_bas_kc_quot[] = {BAS_1_3,BAS_2_3,COMBO_END};
const uint16_t PROGMEM cmb_bas_kc_exlm[] = {BAS_1_2,BAS_2_2,COMBO_END};
const uint16_t PROGMEM cmb_bas_kc_ques[] = {BAS_1_1,BAS_2_1,COMBO_END};
const uint16_t PROGMEM cmb_bas_kc_dot[] = {BAS_1_4,BAS_2_2,COMBO_END};
const uint16_t PROGMEM cmb_bas_kc_comm[] = {BAS_1_4,BAS_2_3,COMBO_END};
const uint16_t PROGMEM cmb_bas_kc_slsh[] = {BAS_1_4,BAS_2_1,COMBO_END};
const uint16_t PROGMEM cmb_bas_kc_tab[] = {BAS_1_4,BAS_1_3,BAS_1_2,BAS_2_1,COMBO_END};
const uint16_t PROGMEM cmb_bas_kc_spc[] = {BAS_2_4,BAS_2_3,BAS_2_2,BAS_2_1,COMBO_END};
const uint16_t PROGMEM cmb_nav_kc_spc[] = {NAV_2_4,NAV_2_3,NAV_2_2,NAV_2_1,COMBO_END};
const uint16_t PROGMEM cmb_bas_kc_bspc[] = {BAS_1_3,BAS_2_4,COMBO_END};
const uint16_t PROGMEM cmb_nav_kc_bspc[] = {NAV_1_3,NAV_2_4,COMBO_END};
const uint16_t PROGMEM cmb_bas_kc_del[] = {BAS_2_2,BAS_1_3,COMBO_END};
const uint16_t PROGMEM cmb_nav_kc_del[] = {NAV_2_2,NAV_1_3,COMBO_END};
const uint16_t PROGMEM cmb_bas_kc_ent[] = {BAS_1_4,BAS_2_4,COMBO_END};
const uint16_t PROGMEM cmb_nav_kc_ent[] = {NAV_1_4,NAV_2_4,COMBO_END};
const uint16_t PROGMEM cmb_bas_kc_esc[] = {BAS_1_4,BAS_1_3,BAS_2_1,COMBO_END};
const uint16_t PROGMEM cmb_nav_kc_esc[] = {NAV_1_4,NAV_1_3,NAV_2_1,COMBO_END};
const uint16_t PROGMEM cmb_bas_cmb_tg_ctl[] = {BAS_1_1,BAS_2_4,COMBO_END};
const uint16_t PROGMEM cmb_nav_cmb_tg_ctl[] = {NAV_1_1,NAV_2_4,COMBO_END};
const uint16_t PROGMEM cmb_mou_cmb_tg_ctl[] = {MOU_1_1,MOU_2_4,COMBO_END};
const uint16_t PROGMEM cmb_bas_cmb_tg_sft[] = {BAS_1_4,BAS_2_3,BAS_2_2,BAS_2_1,COMBO_END};
const uint16_t PROGMEM cmb_nav_cmb_tg_sft[] = {NAV_1_4,NAV_2_3,NAV_2_2,NAV_2_1,COMBO_END};
const uint16_t PROGMEM cmb_bas_cmb_tg_gui[] = {BAS_1_1,BAS_2_3,COMBO_END};
const uint16_t PROGMEM cmb_nav_cmb_tg_gui[] = {NAV_1_1,NAV_2_3,COMBO_END};
const uint16_t PROGMEM cmb_mou_cmb_tg_gui[] = {MOU_1_1,MOU_2_3,COMBO_END};
const uint16_t PROGMEM cmb_bas_cmb_tg_alt[] = {BAS_1_1,BAS_2_2,COMBO_END};
const uint16_t PROGMEM cmb_nav_cmb_tg_alt[] = {NAV_1_1,NAV_2_2,COMBO_END};
const uint16_t PROGMEM cmb_mou_cmb_tg_alt[] = {MOU_1_1,MOU_2_2,COMBO_END};
const uint16_t PROGMEM cmb_bas_osm_mod_rsft[] = {BAS_1_1,BAS_1_2,BAS_1_3,BAS_2_4,COMBO_END};
const uint16_t PROGMEM cmb_nav_osm_mod_rsft[] = {NAV_1_1,NAV_1_2,NAV_1_3,NAV_2_4,COMBO_END};
const uint16_t PROGMEM cmb_bas_cmb_panic[] = {BAS_1_4,BAS_1_3,BAS_1_2,BAS_1_1,BAS_2_4,BAS_2_3,BAS_2_2,BAS_2_1,COMBO_END};
const uint16_t PROGMEM cmb_nav_cmb_panic[] = {NAV_1_4,NAV_1_3,NAV_1_2,NAV_1_1,NAV_2_4,NAV_2_3,NAV_2_2,NAV_2_1,COMBO_END};
const uint16_t PROGMEM cmb_mou_cmb_panic[] = {MOU_1_4,MOU_1_3,MOU_1_2,MOU_1_1,MOU_2_4,MOU_2_3,MOU_2_2,MOU_2_1,COMBO_END};
const uint16_t PROGMEM cmb_bas_tg_cmb_nav[] = {BAS_1_3,BAS_2_4,BAS_2_2,COMBO_END};
const uint16_t PROGMEM cmb_nav_tg_cmb_nav[] = {NAV_1_3,NAV_2_4,NAV_2_2,COMBO_END};
const uint16_t PROGMEM cmb_bas_tg_cmb_mou[] = {BAS_1_4,BAS_1_2,BAS_2_3,COMBO_END};
const uint16_t PROGMEM cmb_mou_tg_cmb_mou[] = {MOU_1_4,MOU_1_2,MOU_2_3,COMBO_END};
const uint16_t PROGMEM cmb_num_kc_7[] = {NUM_1_3,NUM_1_4,COMBO_END};
const uint16_t PROGMEM cmb_num_kc_8[] = {NUM_1_2,NUM_1_3,COMBO_END};
const uint16_t PROGMEM cmb_num_kc_9[] = {NUM_2_3,NUM_2_4,COMBO_END};
const uint16_t PROGMEM cmb_num_kc_0[] = {NUM_2_2,NUM_2_3,COMBO_END};

#define __KEY_COMBOS_DEF__ \
[CMB_BAS_KC_H]=COMBO(cmb_bas_kc_h, KC_H),\
[CMB_BAS_KC_Q]=COMBO(cmb_bas_kc_q, KC_Q),\
[CMB_BAS_KC_U]=COMBO(cmb_bas_kc_u, KC_U),\
[CMB_BAS_KC_C]=COMBO(cmb_bas_kc_c, KC_C),\
[CMB_BAS_KC_K]=COMBO(cmb_bas_kc_k, KC_K),\
[CMB_BAS_KC_B]=COMBO(cmb_bas_kc_b, KC_B),\
[CMB_BAS_KC_W]=COMBO(cmb_bas_kc_w, KC_W),\
[CMB_BAS_KC_N]=COMBO(cmb_bas_kc_n, KC_N),\
[CMB_BAS_KC_F]=COMBO(cmb_bas_kc_f, KC_F),\
[CMB_BAS_KC_X]=COMBO(cmb_bas_kc_x, KC_X),\
[CMB_BAS_KC_J]=COMBO(cmb_bas_kc_j, KC_J),\
[CMB_BAS_KC_M]=COMBO(cmb_bas_kc_m, KC_M),\
[CMB_BAS_KC_P]=COMBO(cmb_bas_kc_p, KC_P),\
[CMB_BAS_KC_V]=COMBO(cmb_bas_kc_v, KC_V),\
[CMB_BAS_KC_L]=COMBO(cmb_bas_kc_l, KC_L),\
[CMB_BAS_KC_Z]=COMBO(cmb_bas_kc_z, KC_Z),\
[CMB_BAS_KC_D]=COMBO(cmb_bas_kc_d, KC_D),\
[CMB_BAS_KC_G]=COMBO(cmb_bas_kc_g, KC_G),\
[CMB_BAS_KC_QUOT]=COMBO(cmb_bas_kc_quot, KC_QUOT),\
[CMB_BAS_KC_EXLM]=COMBO(cmb_bas_kc_exlm, KC_EXLM),\
[CMB_BAS_KC_QUES]=COMBO(cmb_bas_kc_ques, KC_QUES),\
[CMB_BAS_KC_DOT]=COMBO(cmb_bas_kc_dot, KC_DOT),\
[CMB_BAS_KC_COMM]=COMBO(cmb_bas_kc_comm, KC_COMM),\
[CMB_BAS_KC_SLSH]=COMBO(cmb_bas_kc_slsh, KC_SLSH),\
[CMB_BAS_KC_TAB]=COMBO(cmb_bas_kc_tab, KC_TAB),\
[CMB_BAS_KC_SPC]=COMBO(cmb_bas_kc_spc, KC_SPC),\
[CMB_NAV_KC_SPC]=COMBO(cmb_nav_kc_spc, KC_SPC),\
[CMB_BAS_KC_BSPC]=COMBO(cmb_bas_kc_bspc, KC_BSPC),\
[CMB_NAV_KC_BSPC]=COMBO(cmb_nav_kc_bspc, KC_BSPC),\
[CMB_BAS_KC_DEL]=COMBO(cmb_bas_kc_del, KC_DEL),\
[CMB_NAV_KC_DEL]=COMBO(cmb_nav_kc_del, KC_DEL),\
[CMB_BAS_KC_ENT]=COMBO(cmb_bas_kc_ent, KC_ENT),\
[CMB_NAV_KC_ENT]=COMBO(cmb_nav_kc_ent, KC_ENT),\
[CMB_BAS_KC_ESC]=COMBO(cmb_bas_kc_esc, KC_ESC),\
[CMB_NAV_KC_ESC]=COMBO(cmb_nav_kc_esc, KC_ESC),\
[CMB_BAS_CMB_TG_CTL]=COMBO(cmb_bas_cmb_tg_ctl, CMB_TG_CTL),\
[CMB_NAV_CMB_TG_CTL]=COMBO(cmb_nav_cmb_tg_ctl, CMB_TG_CTL),\
[CMB_MOU_CMB_TG_CTL]=COMBO(cmb_mou_cmb_tg_ctl, CMB_TG_CTL),\
[CMB_BAS_CMB_TG_SFT]=COMBO(cmb_bas_cmb_tg_sft, CMB_TG_SFT),\
[CMB_NAV_CMB_TG_SFT]=COMBO(cmb_nav_cmb_tg_sft, CMB_TG_SFT),\
[CMB_BAS_CMB_TG_GUI]=COMBO(cmb_bas_cmb_tg_gui, CMB_TG_GUI),\
[CMB_NAV_CMB_TG_GUI]=COMBO(cmb_nav_cmb_tg_gui, CMB_TG_GUI),\
[CMB_MOU_CMB_TG_GUI]=COMBO(cmb_mou_cmb_tg_gui, CMB_TG_GUI),\
[CMB_BAS_CMB_TG_ALT]=COMBO(cmb_bas_cmb_tg_alt, CMB_TG_ALT),\
[CMB_NAV_CMB_TG_ALT]=COMBO(cmb_nav_cmb_tg_alt, CMB_TG_ALT),\
[CMB_MOU_CMB_TG_ALT]=COMBO(cmb_mou_cmb_tg_alt, CMB_TG_ALT),\
[CMB_BAS_OSM_MOD_RSFT]=COMBO(cmb_bas_osm_mod_rsft, OSM(MOD_RSFT)),\
[CMB_NAV_OSM_MOD_RSFT]=COMBO(cmb_nav_osm_mod_rsft, OSM(MOD_RSFT)),\
[CMB_BAS_CMB_PANIC]=COMBO(cmb_bas_cmb_panic, CMB_PANIC),\
[CMB_NAV_CMB_PANIC]=COMBO(cmb_nav_cmb_panic, CMB_PANIC),\
[CMB_MOU_CMB_PANIC]=COMBO(cmb_mou_cmb_panic, CMB_PANIC),\
[CMB_BAS_TG_CMB_NAV]=COMBO(cmb_bas_tg_cmb_nav, TG(CMB_NAV)),\
[CMB_NAV_TG_CMB_NAV]=COMBO(cmb_nav_tg_cmb_nav, TG(CMB_NAV)),\
[CMB_BAS_TG_CMB_MOU]=COMBO(cmb_bas_tg_cmb_mou, TG(CMB_MOU)),\
[CMB_MOU_TG_CMB_MOU]=COMBO(cmb_mou_tg_cmb_mou, TG(CMB_MOU)),\
[CMB_NUM_KC_7]=COMBO(cmb_num_kc_7, KC_7),\
[CMB_NUM_KC_8]=COMBO(cmb_num_kc_8, KC_8),\
[CMB_NUM_KC_9]=COMBO(cmb_num_kc_9, KC_9),\
[CMB_NUM_KC_0]=COMBO(cmb_num_kc_0, KC_0)

